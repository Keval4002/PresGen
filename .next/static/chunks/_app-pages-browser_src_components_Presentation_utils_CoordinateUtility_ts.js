"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_components_Presentation_utils_CoordinateUtility_ts"],{

/***/ "(app-pages-browser)/./src/components/Presentation/utils/CoordinateUtility.ts":
/*!****************************************************************!*\
  !*** ./src/components/Presentation/utils/CoordinateUtility.ts ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CoordinateManager: () => (/* binding */ CoordinateManager),\n/* harmony export */   PPTX_DIMENSIONS: () => (/* binding */ PPTX_DIMENSIONS),\n/* harmony export */   PptxExportManager: () => (/* binding */ PptxExportManager)\n/* harmony export */ });\n/* harmony import */ var _Edit_CanvaTypesConst__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Edit/CanvaTypesConst */ \"(app-pages-browser)/./src/components/Presentation/Edit/CanvaTypesConst.ts\");\n\nconst PPTX_DIMENSIONS = {\n    WIDTH: 10,\n    HEIGHT: 5.625\n};\nclass CoordinateManager {\n    webToPptx(webCoords) {\n        if (!this.isValidWebCoordinate(webCoords)) return null;\n        const { x, y, w, h } = webCoords;\n        return {\n            x: x * PPTX_DIMENSIONS.WIDTH,\n            y: y * PPTX_DIMENSIONS.HEIGHT,\n            w: Math.min(w * PPTX_DIMENSIONS.WIDTH, PPTX_DIMENSIONS.WIDTH - x * PPTX_DIMENSIONS.WIDTH),\n            h: Math.min(h * PPTX_DIMENSIONS.HEIGHT, PPTX_DIMENSIONS.HEIGHT - y * PPTX_DIMENSIONS.HEIGHT)\n        };\n    }\n    isValidWebCoordinate(coords) {\n        if (!coords || typeof coords !== \"object\") return false;\n        const { x, y, w, h } = coords;\n        return [\n            x,\n            y,\n            w,\n            h\n        ].every((val)=>typeof val === \"number\" && isFinite(val)) && w >= 0 && h >= 0 && x >= 0 && x <= 1 && y >= 0 && y <= 1;\n    }\n    validateAndNormalizeLayout(layout) {\n        if (!layout || typeof layout !== \"object\") return null;\n        const validatedLayout = {};\n        for(const key in layout){\n            if (Object.prototype.hasOwnProperty.call(layout, key) && layout[key] && this.isValidWebCoordinate(layout[key])) {\n                validatedLayout[key] = layout[key];\n            }\n        }\n        return Object.keys(validatedLayout).length > 0 ? validatedLayout : null;\n    }\n    validateSlideMeasurements(measurements) {\n        if (!measurements) return false;\n        if (!measurements.title) return false;\n        for(const key in measurements){\n            if (!this.isValidWebCoordinate(measurements[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nclass PptxExportManager {\n    async exportSavedPresentation(data, theme) {\n        var _data_slides_, _data_slides;\n        // Ensure JSZip is loaded first\n        if ( true && !window.JSZip) {\n            await new Promise((resolve)=>{\n                const script = document.createElement(\"script\");\n                script.src = \"/jszip.min.js\";\n                script.onload = resolve;\n                document.body.appendChild(script);\n            });\n        }\n        // Then load pptxgenjs\n        if ( true && !window.PptxGenJS) {\n            await new Promise((resolve)=>{\n                const script = document.createElement(\"script\");\n                script.src = \"/pptxgen.min.js\";\n                script.onload = resolve;\n                document.body.appendChild(script);\n            });\n        }\n        const PptxGenJS = window.PptxGenJS;\n        const pptx = new PptxGenJS();\n        pptx.layout = 'LAYOUT_16x9';\n        pptx.title = ((_data_slides = data.slides) === null || _data_slides === void 0 ? void 0 : (_data_slides_ = _data_slides[0]) === null || _data_slides_ === void 0 ? void 0 : _data_slides_.title) || \"Presentation\";\n        data.slides.forEach((slideData)=>{\n            this.addSlideFromCanvasElements(pptx, slideData, theme);\n        });\n        await pptx.writeFile({\n            fileName: \"\".concat(pptx.title, \".pptx\")\n        });\n    }\n    addSlideFromCanvasElements(pptx, slideData, theme) {\n        var _slideData_canvasElements;\n        const slide = pptx.addSlide();\n        const backgroundHex = (theme === null || theme === void 0 ? void 0 : theme.background_color) || '#FFFFFF';\n        if (backgroundHex) {\n            slide.background = {\n                color: backgroundHex.replace(\"#\", \"\")\n            };\n        }\n        const hasTitleElement = (_slideData_canvasElements = slideData.canvasElements) === null || _slideData_canvasElements === void 0 ? void 0 : _slideData_canvasElements.some((el)=>el.type === 'text' && (el.text === slideData.title || el.isTitle));\n        if (slideData.title && !hasTitleElement) {\n            slide.addText(slideData.title, {\n                x: 0.5,\n                y: 0.25,\n                w: 9,\n                h: 0.75,\n                fontFace: (theme === null || theme === void 0 ? void 0 : theme.heading_font) || 'Arial',\n                fontSize: 24,\n                color: ((theme === null || theme === void 0 ? void 0 : theme.primary_color) || '000000').replace(\"#\", \"\"),\n                bold: true,\n                align: 'center',\n                valign: 'middle'\n            });\n        }\n        const canvasWidth = slideData.canvasWidth || _Edit_CanvaTypesConst__WEBPACK_IMPORTED_MODULE_0__.CANVAS_CONFIG.WIDTH;\n        const canvasHeight = slideData.canvasHeight || _Edit_CanvaTypesConst__WEBPACK_IMPORTED_MODULE_0__.CANVAS_CONFIG.HEIGHT;\n        (slideData.canvasElements || []).forEach((el)=>{\n            this.addCanvasElementToSlide(slide, el, theme, canvasWidth, canvasHeight);\n        });\n    }\n    addCanvasElementToSlide(slide, element, theme, canvasWidth, canvasHeight) {\n        const pptxCoords = this.canvasToPptxCoordinates(element, canvasWidth, canvasHeight);\n        switch(element.type){\n            case 'text':\n                this.addTextElementToSlide(slide, element, pptxCoords, theme, canvasWidth);\n                break;\n            case 'image':\n                this.addImageElementToSlide(slide, element, pptxCoords);\n                break;\n            case 'shape':\n                this.addShapeElementToSlide(slide, element, pptxCoords, theme);\n                break;\n            default:\n                break;\n        }\n    }\n    canvasToPptxCoordinates(element, canvasWidth, canvasHeight) {\n        const PPTX_WIDTH = 10;\n        const PPTX_HEIGHT = 5.625;\n        const scaleX = PPTX_WIDTH / canvasWidth;\n        const scaleY = PPTX_HEIGHT / canvasHeight;\n        const x = element.x * scaleX;\n        const y = element.y * scaleY;\n        const w = (element.width || 200) * scaleX;\n        const h = (element.height || 50) * scaleY;\n        return {\n            x,\n            y,\n            w,\n            h\n        };\n    }\n    addTextElementToSlide(slide, element, pptxCoords, theme, canvasWidth) {\n        const scale = 720 / canvasWidth;\n        const scaledFontSize = (element.fontSize || 18) * scale;\n        const color = (element.fill || (theme === null || theme === void 0 ? void 0 : theme.text_color) || '#000000').replace('#', '');\n        slide.addText(element.text || '', {\n            ...pptxCoords,\n            fontFace: element.fontFamily || (theme === null || theme === void 0 ? void 0 : theme.body_font) || 'Arial',\n            fontSize: scaledFontSize,\n            color: color,\n            bold: element.fontStyle === 'bold',\n            italic: element.fontStyle === 'italic',\n            align: element.align || 'left',\n            valign: element.verticalAlign || 'top',\n            bullet: !!element.bulleted,\n            transparency: typeof element.opacity === 'number' ? (1 - element.opacity) * 100 : 0,\n            rotate: element.rotation || 0\n        });\n    }\n    addImageElementToSlide(slide, element, pptxCoords) {\n        const imageOptions = {\n            x: pptxCoords.x,\n            y: pptxCoords.y,\n            sizing: {\n                type: 'cover',\n                w: pptxCoords.w,\n                h: pptxCoords.h\n            },\n            rotate: element.rotation || 0\n        };\n        if (typeof element.src === \"string\" && (element.src.startsWith(\"data:image/png\") || element.src.startsWith(\"data:image/jpeg\"))) {\n            imageOptions.data = element.src;\n            slide.addImage(imageOptions);\n        } else if (typeof element.src === \"string\" && (element.src.startsWith(\"http://\") || element.src.startsWith(\"https://\"))) {\n            imageOptions.path = element.src;\n            slide.addImage(imageOptions);\n        }\n    }\n    addShapeElementToSlide(slide, element, pptxCoords, theme) {\n        slide.addShape(element.shapeType || 'rect', {\n            ...pptxCoords,\n            fill: {\n                color: (element.fill || (theme === null || theme === void 0 ? void 0 : theme.primary_color) || '#000000').replace(\"#\", \"\")\n            },\n            line: {\n                color: (element.stroke || '#000000').replace(\"#\", \"\"),\n                width: element.strokeWidth || 0\n            },\n            rotate: element.rotation || 0\n        });\n    }\n    constructor(){\n    // Removed unused coordinateManager property\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Presentation/utils/CoordinateUtility.ts\n"));

/***/ })

}]);